@inherits LayoutComponentBase

@using BlazorFocused.Store
@using Integration.Sdk.Models
@using Integration.Client.Services 
@using Microsoft.AspNetCore.Components.Authorization 

@inject NavigationManager navigationManager
@inject AuthenticationStateProvider authenticationStateProvider
@inject IStore<User> userStore

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <div class="main">
        <div class="top-row px-4">
            <AuthorizeView>
                <Authorized>
                    <div>
                        <b>@user.LastName, @user.FirstName</b>
                        <text>&nbsp;</text>
                        <i>(@user.UserName)</i>
                        <text>&nbsp;</text>
                        <a href="" @onclick="SignOutOnClick">Sign Out</a>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <NavLink class="nav-link" href="authentication" Match="NavLinkMatch.All">
                        <span class="oi oi-lock-locked" aria-hidden="true"></span> Login / Register
                    </NavLink>
                </NotAuthorized>
            </AuthorizeView>
        </div>

        <div class="content px-4">
            @Body
        </div>
    </div>
</div>

@code {

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected User user = new User();

    protected override void OnInitialized()
    {
        userStore.Subscribe(updatedUser =>
        {
            this.user = updatedUser;
            this.StateHasChanged();
        });
    }

    private void SignOutOnClick(MouseEventArgs e)
    {
        var userAuthProvider = authenticationStateProvider as UserAuthenticationProvider;

        userAuthProvider.Logout();

        navigationManager.NavigateTo("/");
    }
}
